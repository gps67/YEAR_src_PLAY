2020-01-15 Jan Wed 00:00 2020-01-15_WRAP_DIAG.txt

	+
	 u8_hi
	+

	+---------------
	|PAGE
	| TEXT
	|  "%s%s%s" "u8" "\n" "hi" // LHS mid_syntax_item RHS // TOKEN_LEX_DIAG
	|...
	+---------------

	+---------------
	| ITEM
	| TEXT
	+---------------
	// { SCRIPT } // CMNT // CODE_POINT_id ITEM_id // .code_point

	+---------------
	| Layout	// .codepoint
	| LHS
	| RHS
	| POOL
	| TEXT
	+---------------
	// { SCRIPT } // CMNT // CODE_POINT_id ITEM_id // .code_point

	DIAG_COMBINE
	PSG_SCRIPT // builds REXPR loads tables has_a_code_point HERE // SCOPE
	 XY ITEM LHS
	 XY DIAG HERE
	 XY ITEM RHS
	 STO_RUN HERE_MACHINE // import TABLES // remember settings // sess //


	+---------------
	| TEXT
	| TEXT
	+---------------
	// XYWH_t & xywh; // also available as P0P2 via _detail_
	// DIALECT_t & dialect; // VIEW_HERE_AS "toupper(_)" / XYWH
	// DIALECT_t & dialect; // EDIT_HERE_AS "toupper(_)" / XYWH_SURFACE
	// DVI from print_tree_print // scripted docs second tree //

	+---------------
	| SET
	+---------------
	// str1 TEXT
	// DIALECT_t & dialect; // str1_is_TOK _is_tokenised
	// DIALECT_t & dialect; // str1 has SCOPE and SPAN
	// TEXT is ASCII_markup_with_utf8_data
	// DVI from print_tree_print // scripted docs second tree //

BENCH	PSG_SCRIPT str1_TEXT SUBLEX

	UNIT_LEX ...
	SUBLEX ...
	PSG ...
	FILTER ... // none currently, RW access via PERMIT // CURR OFF
	DIAG ...
	DTP = guess from PSG via FILTER("PRELOAD");
	GEN = guess from DTP // list of SCANS tokenised at CT

	EXPR { // HERE

		%s
	}

	// HERE = {h v} at %s

	EXPR { %s } // already FILTER += DTP_BLOCK_ITEM // tabbed indented plus

	{ SET Name Type Value .code_point }
		{ SET Name Type Value .code_point }
		 NAME_t item; // VIEW==_detail_/_item_
	
	GEN {
	 KNOW HERE // .code_point // CALLER PROVIDES via &
	 KNOW Type // CT,RT thing
	 KNOW Name // CT,RT thing
	 VAR Name // .code_point.var // extra HERE.STEP // MUX STO
	 VAR Name // .code_point.var2 // FILTER Name=[idx] // UNIQ no duplicates //
	 // IDX = CT_EXPR_ID_of HERE.code_point.var_0xFF // u8
	 // IDX = CT_EXPR_ID_of HERE.code_point.var_0xFFFF // u16_hilo
	 // tree_duplicate // PICK { u8 u16_hilo } as IDX_t
	 // network byte order
	 // u16_hilo OFFS_PREV;	// SET OFFS = base_plus_curr_offs
	 // u16_hilo OFFS_CURR; // u16_OFFS // where ITEM is
	 // u16_hilo OFFS_NEXT; // u16_ITEM // _id

	// u16_OFFS // place in cold store, lift from cold sto, from HILO to CPU
	// This code gets ROM permit, to define stuff, users dont get that
	// filter UDEF from remote

	// ADDR = SEGMENT_BASE + ITEM_OFFS
	// SEGMENT_page0 // macro with usage variations // is_a_var_link
	// ADDR_of_type = _BASE + u16_OFFS_item_addr
	// SPEC_of_type = _LEX_SCOPE SPEC_of_ITEM ROM STO = SPEC
	}

	EXPR { SET VarName Value // get Type from .code_point }
	EXPR { VarName += expr // step to next line // ... }
	EXPR { pick_font(f) // ... }
	EXPR { ... ITEM ... }
	EXPR { ... ARGS ... }
	// get interpretation from .code_point ... } 

####	caller provides code_point_t & code_point
####	that code can attach a twig over a point, a new scope
####	or more often, code_point shares code_point_world _t
####	caller then (has option of) add field TOKEN_id code_point
####	caller provides own POOL of addressable leaves // u8_idx //
