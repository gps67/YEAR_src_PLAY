
	2020_09_Sep_NOTE
	2020-09-09_NOTE_LOG_WISE.txt

	LOG_WISE

	let the systems tell you their problems

	LANG = PSG declared script

	PSG => recursive descent parser = design
	PSG => YACC_TOO

	EXPR = a bit like REGEXP, but partial

		[a-zA-z0-9_]
		C_SET = {} // default CTOR, knows it is a local
		C_SET += "[a-z]"
		C_SET += "[A-Z]"
		C_SET += "[0-9]"
		C_SET += "[$_]"
	
	src/lib_base/bits/cset_bit_map // cset_byte_map

		I think this may need extra DOCS + CARE
		because of bit-ordering on page on axis
		76543210
		... 15 16 17 18 19 20 21 22 23 24 25 ...
		...  7  0  1  2  3  4  5  6  7  0  1 ...
		but in word >> means right which is left on page

		...     0  1  2  3  4  5  6  7   ...
		...     7  6  5  4  3  2  1  0   ...
	
		BUT OK is uses in-mem same code same cpu
		SO temp per session
		SOON tagged which it is (like pixel byte ARGB order, but bit)

	cset_bit_map // uses BYTE=N/8 then CPU bit
	// CPU_BIT on all CPU's is 1 << bit_number

	see mm3_scan // mm3_file_scan // revive into lib_base/scan

		BITS.include( BITS2 )
		BITS.exclude( BITS2 )
		BITS.set_bit( idx ) // u8 idx; // why not int idx; 
		BITS.set_range( lo, hi ) // u8 again
		BITS.set_range( "By_NAME" ) // only kidding, that's UDEF // TODO

		BITS.set_range( 'A', 'Z' )
		BITS.set_range( '0', '9' )
		BITS.set_range( 'a', 'z' )
		BITS.set_bit( '$' )
		BITS.set_bit( '_' )

		set ALPHA_ONE BITS 

		SEQ += 







