
DEST = LHS OPCODE RHS // OP1 OP2
DEST = Rd // u4 // 15=PC 14=LINK 13=STACK
DEST = one of { 0 1 2 3 4 5 6 7   8 9 10 11  12  { 13 14 15 } }
DEST = one of { 0 1 2 3 4 5 6 7   8 9 10 11  12  { 13=STACK 14=LINK 15=PC } }
DEST = one of { 0 1 2 3 4 5 6 7   8 9 10 11  12  { {13 14 15} { STACK LINK PC } }}
DEST = one of { 0 1 2 3 4 5 6 7   8 9 10 11  12  { 13 14 15 } { STACK LINK PC } }
// INFER uses specific tokens within filtered usage

SYMBOL TOKEN EA DATA SPEC

	u64_t SOMETIMES MEANS u64 // int // unsigned int // uns //
	u64_t SOMETIMES MEANS u64_t // u64_payload_in_cpu_var_ // DECODER u64

	u64_t has itself or a group shared CTXT
	u64_t has extra fields VTBLS CT_ RT_ EDIT_ 

DEST = u4_t u4_idx_register
	u4_idx_register : u4_t idx = lookup(" idx ")
	// CODE on first use fill CACHE when lookup { SP %s SP } PARAMETER

u4_idx_register DEST OP1 OP2 SHIFT_WHEN_REG

	DEST = OPCODE OP1 OP2 
	DEST += OPTIONAL OP3 = SHIFT = register = u4_OP3

	Rd = DEST
	Rn = OP1
	Rm = OP2
	Rs = R_SHIFT



	OP1 = R_OP1 // u4_idx
	OP2 = R_OP2 || Rm << u8_shift_expr  // DECODE TOO
	OP2 = R_OP2 || Rm << u8_shift_expr Rs=OP3_R_SHIFT  // DECODE TOO
	OP2 = 
	

