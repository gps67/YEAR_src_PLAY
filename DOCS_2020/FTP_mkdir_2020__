#/bin/bash 

# expect caller has PATH that works
# including . fns_XXXX for bash

. fns_var_add # ~/bin_LGX # because PATH_TOOL is a binary
var_add PATH \
	/home/gps/bin_NFS_down/HOME/bin \
	/home/gps/bin_NFS_down \
#
#	/home/gps/2017/bin_NFS/HOME_bin \
#	/home/gps/2018/bin_NFS/HOME_bin \

. fns_FAIL
. fns_DIRS
. fns_DATE
. fns_ASKS

# can change date -d if required #

	fn_DATE_get_VARS 2020-01-15 # _get_ new values means _set_ new_values
	# fn_DATE_show_VARS 2020-01-15 # set date from ARGS
	# fn_DATE_show_VARS 
	echo "# DATE # $DATE_year_mm_dd"
	fn_DATE_show_VARS DATE_year_mm_dd
# exit

# set -x
FTP_YEAR_MM_Jan="FTP_${DATE_YEAR}_${DATE_MM}_${DATE_Jan}"
FTP_YEAR="FTP_${DATE_YEAR}"
FTP_YEAR_="FTP_YEAR"
HOME_YEAR="${HOME}/${DATE_YEAR}"
HOME_YEAR_="${HOME}/YEAR"
HOME_FTP_YEAR="${HOME_YEAR}/${FTP_YEAR}"

nfs_NAS2=/nfs/NAS2
nfs_NAS2_YEAR="${nfs_NAS2}/${DATE_YEAR}"
nas_internal_link_root="mnt/HD/HD_b2" 	# b2 will change
nas_internal_link_YEAR=${nas_internal_link_root}/${DATE_YEAR}

cd

# ~/YEAR/ is a convenience for scripts and me

ln_s_ask "${nfs_NAS2_YEAR}"/ "${DATE_YEAR}"
ln_s_ask "${DATE_YEAR}"/ "$HOME_YEAR_"

# ~/201X/ is on NAS2 # some bounces to get to it

fn_populate_YEAR()
{
	pwd # should be .
	ln -sf /nfs/NAS2/2016/	# arg defaults so ./2016 => /nfs/NAS2/2016/
	ln -sf /nfs/NAS2/2017/ # HERE List of where YEAR storage Layout
	ln -sf /nfs/NAS2/2018/ # STILL NAS2 ON_CHANGE: rewrite /nfs/YEAR/2018/.
	ln -sf /nfs/NAS2/2019/ # TODO XoneOut_Layout STO = { STO } =  Disk2 ... 
	ln -sf /nfs/NAS2/2020/
	mkdir ADMIN_${DATE_YEAR}
	L1="
		AUDIO
		PVR
		PHOTOS
		REC
		src_build
"
	L2="
		AV_YT
		BOUGHT
		HOME
		WORK
"
	for name in $L1		# name -> name_2019/. # CTXT = NOW
	do
		d=${name}_${DATE_YEAR} 	# PVR_2019
		mkdir ${d}
		ln_s_ask $d/ $name # PVR -> PVR_2019/
		# ,/PVR/, -> ./PVR_YEAR/. -> ./PVR_2019/.
		# /PVR/ -> PVR_2019 # Dir_MINI_TOP_Root # VFS
		# VFS on { ... Disk X ... }
	done
	for name in $L2
	do
		d=${name}_${DATE_YEAR}
		mkdir ${d}
	done

	echo you move over src SITE etc

}

if [ ! -d "${nfs_NAS2_YEAR}/" ]
then
	# /nfs/NAS2/ is actually the local machine
	cd_or_FAIL $nfs_NAS2
	ln_s_ask_sudo ln -sf $nas_internal_link_YEAR/ "${DATE_YEAR}"
	if [ ! -d $nas_internal_link_YEAR/ ]
	then
		ask_do mkdir $nas_internal_link_YEAR/ 
		cd_or_FAIL $nas_internal_link_YEAR/
		ask_do_fn fn_populate_YEAR
	fi
fi


# FAIL HERE

cd_or_FAIL $HOME
cd_or_FAIL ${HOME_YEAR} 

# ~/2018/FTP_2018/
cd_mkdir_FAIL ${HOME_FTP_YEAR} 

# ~/2018/FTP_2018/FTP_2018_01_Jan/
rmdir $FTP_YEAR_MM_Jan 2>/dev/null # if empty allows script debug
if [ ! -d $FTP_YEAR_MM_Jan ]
then
	mkdir_FAIL $FTP_YEAR_MM_Jan
fi

ln_s_ask $FTP_YEAR_MM_Jan/ FTP_ 
ln_s_ask $FTP_YEAR/FTP_ ../FTP_
ln_s_ask $FTP_YEAR/ $HOME/YEAR/FTP_YEAR
ln_s_ask YEAR/FTP_/ ${HOME}/FTP_
ln_s_ask YEAR/src/SCRATCH_SCRIPTS/in_BASH/bin_NFS/ /home/gps/bin_NFS
# ln_s_ask /nfs/BAX/ $HOME/BAX
# ln_s_ask /nfs/BAX/ $HOME/YEAR/BAX

	# ERRM .. OK ...
	# EDIT in last years dirs
	# 2019

CURR=${DATE_YEAR} # not "/YEAR/"
PREV=2019
NEXT=2021
cd_or_FAIL $HOME/2019/
cd_or_FAIL /tmp
cd_or_FAIL $HOME

LIST1="
	ADMIN
	AUDIO
	BAX
	BOUGHT
	FTP
	HOME
	PHOTOS
	REC
	SCANS
	YT
	src_build
	src

"
for name in $LIST1
do
	name_YEAR=${name}_${DATE_YEAR}
	name_PREV=${name}_${PREV}
	D2=$DATE_YEAR/${name_YEAR}/
	if [ ! -d "$D2" ]
	then
		ask_do mkdir "$D2"
	fi
	# ~/YEAR/NAME => NAME_2020
	ln_s_ask "${name_YEAR}/" "${HOME}/YEAR/${name}"
	# 2019/NAME_2020 => 2020/NAME_2020/
	ln_s_ask "${CURR}/${name_YEAR}/" "${PREV}/${name_YEAR}"
	# 2020/NAME_2019 => 2019/NAME_2019/
	ln_s_ask "${PREV}/${name_PREV}/" "${CURR}/${name_PREV}"
	# ~/NAME => YEAR/NAME
	rm_ln_s_ask "YEAR/${name}/" "${HOME}/${name}"

done

	ln_s_ask "${HOME}/${PREV}/" "${HOME}/${CURR}/${PREV}"
	ln_s_ask "${HOME}/${CURR}/" "${HOME}/${PREV}/${CURR}"
	

