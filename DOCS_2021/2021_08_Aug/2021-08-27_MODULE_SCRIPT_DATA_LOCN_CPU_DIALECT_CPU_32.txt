	2021-08-27

	2021_08_Aug
	2021-08-27_MODULE_SCRIPT_DATA_LOCN_CPU_DIALECT_CPU_32.txt

	u32_u32_payload // Tcl Obj // +as_str +ref_count + ext_type

	 +ext_type - one of 4 ext types, 4 loadable modules API styles
	 all actually use same API style, and decoder
	 or a few
	 	STRUCT
		 u32_SPEC
		 	PTR in GLOBAL MEMORY T*
		 u32_DATA
		 	PTR in GLOBAL MEMORY

	 	STRUCT
		 u32_SPEC
		 	DECODE( u32_EXPR ) 
		 u32_DATA
		 	DECODE( u32_EXPR ) 

		 // much like u16_u48 split
		 // some have u8_u24 split OFFS = u24_payload OPCODE = u8
		 // OPCODE
		 // MEMORY_BANK[ u4 ] of BYTES[u24]
		 // OPCODE OFFS = u24_payload * {1,2,4,8}
		 // OPCODE OFFS = u24_payload * {1024,256,K64,MB1}
		 // OPCODE MICROCODE OPCODE=u8a TABLE=TABLES[u8b] ITEM[u16]
		 // OPCODE MICROCODE OPCODE=u8a TABLE=TABLES[u3] ITEM[16M]
		 // OPCODE OPCODE.u3 TABLE=TABLES[{0,1,2,3,4,5,6,7] ITEM[16M]
		 // OPCODE MICROCODE OPCODE=u8a TABLE=TABLES[u3] ITEM[16M]
		 // OPCODE IDX_TABLES=u3=OPCODE.u3 IDX_ITEM = u24 
		 // OPCODE IDX_HEAP=u3=OPCODE.u3 OFFS_ITEM = u24 * 8 +

		 // USING OFFS=u24*8 to start of FIELD_of_STRUCT
		 // not array of u64, but array of addressable clicks
		 // plus CT OFFS // CT OOFS of FIELD in STRUCT
		 // 16M * 8 = 128M and still using X86 x8
		 // 4G * 8 = 32G from u32_payload
		 // u29_u3 // 4G limit anyway // u3=WORD & 7 u29 = WORD >> 3 
		 // u28 u4 // 2G limit but u4_OPCODE


		WORD
	
	upper BITFIELD lower

		<< clear upper // skip if 0
		>> clear lower leave in place1
	
	u32_u32_payload

		u32 x8 + OFFS // done in X86 instruction

	MEMORY

	-click-8-

		LOADED FILE START

		ENTIRE SEGMENT

		LOADED SUB SEGMENT

		OFFS_STRUCT = payload x 8

	-click-8-

		OBJECT START STRUCT

		OFFS = u16_const_CT // OFFS of FIELD in STRUCT
		OFFS -> field
		
	-click-8- x8
	-click-4- x4
	-click-2- x2
	-click-1- x1


		OFFS_x8_t clickx
		EA_x8 EA_offs == EA_x8 offs * 8 

		OPTION
		 store 2 values as BITFIELDS u3_u29

		 u29_payload_x8 == WORD << 3
		 u3_payload == WORD >> 29

		 but then payload_x8 << 3 again OPCODE

		 OPT needs CLIP32, ZERO_upper_32, KEEP_ZERO,
		 subsequent CLIP32 would also work

		OPTION
		 store as u29_u3
		 u3 == WORD & 7
		 u29 == WORD >> 3



