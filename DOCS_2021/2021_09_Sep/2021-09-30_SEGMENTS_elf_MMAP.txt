	2021-09-30

	2021_09_Sep
	2021-09-30_SEGMENTS_elf_MMAP.txt


	SEGMENT_t SEGMENT; 

	EA_SEGMENT = & SEGMENT;

	// allocated nbytes in a surrounding segment
	// C compiler does that
	// .text // CODE
	// .data // const and init_vals
	// .bss // INIT_NULL nbytes
	//

 DONE elf_SEGMENT # COMPILE into .SO or DLL and load with dlopen() SYMBS

 load elf_CODE # if this file has PERMIT ASM and PERMIT CODE
 load elf_DATA # PAGE_TREE_SEGMENT // tree of 1 thing // SEGMENT //


	STRUCT SEGMENT // INIT_NULL

	 get_addr_of_symbol_in_segment "static SEGMENT_t SEGMENT"

	 dlopen
	 find symbol "SEGMENT" as PTR within SEGMENT
	
	 struct SEGMENT_t { // ALIGN START OF SEGMENT 

	 struct PAGE_TREE = array[ u24 ] of PAGE_4K_INSITU
	 += array[ 24 ] of META_over_PAGE
	 PAGE_META {
	 	OFFS_above_PAGE_ZERO_of_SEGMENT
		OFFS_of_PAGE_in_FILE // DUMP MODIFIED PAGES TO TRANSACTION_LOG
		QUEUE_of_PAGES_written_back_DELTA_STEP
	 }

 PREV-STEP-NEXT

 	-STEP- is a list of MMAP pages (and other edits)
	DATA_4K is in ZONE_2 OFFS_4K
	ZONE_2 is several pages in an aligned row // align 4K //
	DATA_2 = PAGE_4096[idx_STEP_PAGE]
	INFO_2 = INFO_PAGE[idx_STEP_PAGE] // parallel array PAGE_JOIN NO_GAP
	FILE_ITEM_SPEC N_PAGES = PAGE_t * PAGE = PAGE_ZERO + N * PAGE_SIZE
	P0 == PAGE_ZONE
	P2 == P0 + N * PAGE_SIZE  

