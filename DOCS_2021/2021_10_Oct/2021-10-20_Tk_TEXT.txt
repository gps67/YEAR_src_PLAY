	2021-10-20

	2021_10_Oct
	2021-10-20_Tk_TEXT.txt

	tk canvas can draw text at any angle
	see demo widget
	(see also how you can edit and run, seamlessly)


tkCanvText.c
    DisplayCanvText(...)

	TkDrawAngledTextLayout(
	 display,
	 drawable,
	 textPtr->gc,
	 textPtr->textLayout,
	 drawableX,
	 drawableY,
	 textPtr->angle,	// 0..360
	 0,			// selLastChar + 1
	 textPtr->numChars
	);

tkFont.c

  TkDrawAngledTextLayout(...)

	Tk_MeasureChars(...)
	TkpDrawCharsInContext(...)
	TkpDrawAngledCharsInContext(...)

	Tk_DrawChars
	TkDrawAngledChars(
		display, drawable, gc, layoutPtr->tkfont,
		firstByte, lastByte - firstByte, x+dx, y+dy, angle);


tkInt.decls

	declare 184 
	TkDrawAngledChars(...)

	void TkDrawAngledChars(Display *display,Drawable drawable, GC gc,
        Tk_Font tkfont, const char *source, int numBytes, double x,
        double y, double angle)

	tkIntDecls.h ... EXTERN
	tkIntDecls.c ... EXTERN

	#define TkDrawAngledChars \
        (tkIntStubsPtr->tkDrawAngledChars)

	// NB Tk fn tk field in stubs struct that points to fn

unix/
 tkUnixFont.c
  3078
  	draw on a Pixmap
	convert to XImage (getImageOfText)
	rotate image to second XImage (InitDescImage)
	use that as a mask when drawing
	send XPutImage() to server
		to Pixmap on server

 tkUnixRFont.c
  1021
  	complains about cumulative int ROUND16 errors by Xft on server

	XftDrawCreate
	XftDrawChange

	XftDrawSetClip
	XftGlyphExtents
	XftDrawGlyphFontSpec




	GetImageOfText


