	2022-01-19

	2022_01_Jan
	2022-01-19_SSL_SNI_servername_GETTER.txt

QUOTE 
https://www.openssl.org/docs/man1.1.1/man3/SSL_get_servername_type.html
PRINT
 INDENTED_TEXT_profile
  LINE by LINE 
  STEP by STEP
  ARG_v ARG_w

#include <openssl/ssl.h>

long SSL_CTX_set_tlsext_servername_callback( /* ctx, cb, */

	SSL_CTX *ctx,

//	int (*cb)( SSL*s, int*al, void*arg ));
//	usable as {int cb( s, al, arg )}
	int (*cb)(
		SSL * s,
		int * al,
		void * arg
	)
);

long SSL_CTX_set_tlsext_servername_arg(
	SSL_CTX *ctx,
	void *arg
);

const char *SSL_get_servername(
	const SSL *s,
	const int type
);

int SSL_get_servername_type(const SSL *s);

int SSL_set_tlsext_host_name(const SSL *s, const char *name);

// ------------------------------- DIFFERENT TEMPLATE -- SAME DATA // CSET 

long SSL_CTX_set_tlsext_servername_callback( ctx, cb )
long SSL_CTX_set_tlsext_servername_arg( ctx, arg );
const char *SSL_get_servername( s, type );
int SSL_get_servername_type(const SSL *s);
int SSL_set_tlsext_host_name(const SSL *s, const char *name);

	SSL_CTX *ctx,

	int AD_al == SSL_AD_UNRECOGNIZED_NAME;

//	int (*cb)( SSL*s, int*al, void*arg ));
//	usable as {int cb( s, al, arg )}
//	// This is the registered UDEF CODE DATA // VAR AD_al // VAR clientData
//	// CODE = 
//	// DATA = clientData // expressed as { void * arg }
//		callback(ssl,AD_code,clientData)
	int (*cb)(
		SSL * s,	// RETVAL SSL_AD_UNRECOGNIZED_NAME
		int * AD_al,	// RETVAL refusal_reason_error_code al
		void * arg
	)
);

// UDEF CODE
//	int (*cb)( SSL*s, int*al, void*arg ));
int cb_default( SSL*s, int*al, void*arg );

SSL_TLSEXT_ERR _OK		SERVER_PRE_MORPHED_INTO_servername
SSL_TLSEXT_ERR _ALERT_FATAL	client requested servername server refuse 
SSL_TLSEXT_ERR _ALERT_WARNING	refuse but continue
SSL_TLSEXT_ERR _NOACK		refuse but not refuse 


gps@E6320:/tools/x86_64/libr/include/openssl$ grep servername *
tls1.h:__owur const char *SSL_get_servername(const SSL *s, const int type);
tls1.h:__owur int SSL_get_servername_type(const SSL *s);
tls1.h:# define SSL_CTX_set_tlsext_servername_callback(ctx, cb) \
tls1.h:# define SSL_CTX_set_tlsext_servername_arg(ctx, arg) \



