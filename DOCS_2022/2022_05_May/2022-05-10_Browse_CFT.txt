	2022-05-10

	2022_05_May
	2022-05-10_Browse_CFT.txt

TASK is subtask of being a CC parser

	/home/gps/YEAR/FTP_YEAR_CVS/
		sourceware.org/git/binutils-gdb/
			include/
				ctf.h
	
	BROWSE files simply viewing them
		plain text, CSET, no PSG
	MAYBE add a highligher
		/* comment */
		struct ...
		 field

		#include <sys/types.h>
		#include <limits.h>
		#include <stdint.h>

		prepared #include
		task = gen NAME is: typedef u32 NAME32 // 
		task = gen NAME is: #define NAME32 NUMERIC // guess subtype
		task = gen NAME is: 
		task = gen NAME is: FILE LINE XPOS // XPOS3
	
		provided CDECL
#define CTF_MAX_TYPE    0xfffffffe      /* Max type identifier value.  */
#define CTF_MAX_PTYPE   0x7fffffff      /* Max parent type identifier value.  */
#define CTF_MAX_NAME 0x7fffffff         /* Max offset into a string table.  */
#define CTF_MAX_VLEN    0xffffff /* Max struct, union, enum members or args.  */

			detect gap line in block of decls
			detect pre-block line
			detect tail comment

		detect typedef struct %s { ... } %s_t;
		detect %s_%s "ctf" "%s"

typedef struct ctf_preamble
{
  unsigned short ctp_magic;     /* Magic number (CTF_MAGIC).  */
  unsigned char ctp_version;    /* Data format version number (CTF_VERSION).  */
  unsigned char ctp_flags;      /* Flags (see below).  */
} ctf_preamble_t;


		detect #ifdef #else chunks

		bunch of words redefined everywhere
		need to worj through them and resonate

#define CTF_K_INTEGER   1       /* Variant data is CTF_INT_DATA (see below).  */
#define CTF_K_FLOAT     2       /* Variant data is CTF_FP_DATA (see below).  */
#define CTF_K_POINTER   3       /* ctt_type is referenced type.  */
#define CTF_K_ARRAY     4       /* Variant data is single ctf_array_t.  */
#define CTF_K_FUNCTION  5       /* ctt_type is return type, variant data is
                                   list of argument types (unsigned short's for
                                   uint32_t's for v2).  */
#define CTF_K_STRUCT    6       /* Variant data is list of ctf_member_t's.  */
#define CTF_K_UNION     7       /* Variant data is list of ctf_member_t's.  */
#define CTF_K_ENUM      8       /* Variant data is list of ctf_enum_t's.  */
#define CTF_K_FORWARD   9       /* No additional data; ctt_name is tag.  */
#define CTF_K_TYPEDEF   10      /* ctt_type is referenced type.  */
#define CTF_K_VOLATILE  11      /* ctt_type is base type.  */
#define CTF_K_CONST     12      /* ctt_type is base type.  */
#define CTF_K_RESTRICT  13      /* ctt_type is base type.  */
#define CTF_K_SLICE     14      /* Variant data is a ctf_slice_t.  */

...

#define CTF_INT_SIGNED  0x01    /* Integer is signed (otherwise unsigned).  */
#define CTF_INT_CHAR    0x02    /* Character display format.  */
#define CTF_INT_BOOL    0x04    /* Boolean display format.  */
#define CTF_INT_VARARGS 0x08    /* Varargs display format.  */

# define CTF_CHAR (CTF_INT_CHAR)

-----------------
TASK BROWSE SORT COLLATE

	split items into collated hoppers
	split items into levels of detail // relevence of adjacent
	view items as faint bold

TASK XPOS_3 [P0[P2 selection zone

	single IDENT
	single LEXPR[subexpr].tail
	phrase on one line
	phrase with indented args
	phrase with indented blocks

	detect aligned indents
	detect unaligned line-tails (hard to make OK)

	detect comment text that is aligned

TASK browse project layout

	include

	/home/gps/YEAR/FTP_YEAR_CVS/
		sourceware.org/git/binutils-gdb/
			include/
				ctf-api.h 
				ctf.h
			libctf/
				configure // KNOWN(*)
				*.c
				*.h
				*.* // having filtered out *.ext KNOWN(*)

	


