	2023-08-12

	2023_08_Aug
	2023-08-12_TREE_MMAP.txt

 TREE_of_SGML

 	ELEM_INST
	ELEM_ITEM
	ELEM_INFO
	ATTR_LIST
	 ( name spec value )
	DATA_LIST
	 LIST_of_ITEM // OPTS_when_empty OPTS_when_overfull 
	 ITEM provides { SPEC DATA }
	DATA_ITEM
	 ELEM_ITEM
	 TEXT_list_of_WORDS
	 TEXT multi_part_word _list_of_WORD_parts
	  SDATA_CHAR
	  SDATA_CHARS
	  SDATA_ITEM

 TREE_of_JSON

 	LEAF
	 Numeric
	 STR0
	 STR_P0P2
	LIST
	 of_MIXED_ITEM_TYPES
	 as_FIXED_ITEM_TYPES // eg all STR0 // eg all OBJ_of_TYPE
	JSON
	 list of fields
	 ( name SPEC value ) // spec == NULL meaning go_figure not_set_yet
	CODE
	 VALUE_can_be_EXPR_or_SCRIPT_or_MODULE
	
	OBJ_MACRO
	 OBJ is LEAF || LOCN 
	 OBJ seems to be like ... (ABOVE)
	 OBJ is well known TWIG_SHAPE
	 OBJ is BUILTIN_CXX_BINARY_or_SOMETHING

 TWIG_of_SHAPE

 	MATCH TWIG
	 _TWIG_ROOT_
	 _MATCH_FIELD_LIST_
	  ANY_STAR_OF
	   DECL_FIELD1
	   DECL_FIELD2
	
	GRAFT_on_MATCH
	 upgrade SGML to OBJ
	  which also acts like SGML
	  but moves to CXX_TREE from SPIN_TREE from OBJ_in_LANG
	  CXX_SCRIPTED_OBJ then appears in JSON into ES6 // or_WASM //
	
	SHAPE is a bit like DTD
	 TEMPLATE follows TEMPLATE
	 BRINGS GUI API helpers
	 makes features available in nearby lists of commands + data
	 AUTO_GEN plausible phrases // AUTO_WRAP via FILTERS //

 BENCH GROW TREE - around TWIG templates

 	AUTO_GROW "{ TWIG }" // mention_MK_VAR("TWIG") // ALIAS(" TWIG ")
		added SP ensures LEX_EDGE
		added SP optionally not shown // not_used // "%s" // SP %s SP //
	
	type-predict matches FIELDNAME
		ASKS is FIELDNAME - BIND AS ITEM
		ASKS which USAGE GROUP MACRO ARGS
		OFFERS TWIG template into nearby
	
----

RPC Q10

	RPC calls SCRIPT.EXPR on remote, knowing it is EXACTLY like ROM.SCRIPT
	CACHE can optimise not calling it again, at all, with LOCKS, queued
	Untrusted code has PERMIT to call SCRIPT_on_LIST with BEST_ARGS
	because we are providing our own SCRIPT we can compile it
	RPC CALL ARGV // OBJV 
	Q10 add ARGV to list in this queue (Q10 of Q20)
	Caller splits 100,000 triangles onto first queue
	eval step moves items onto new queues (QSTEP_123_of_999)
	batch processing drain("STEP_124") uses memory well, and MMAP hits and 
	SCHEDULER takes ITEM from a Q10 and runs that to next pause point
	CACHE takes EVAL_EXPR and makes it local not remote, or BOTH, _PREDICT


