	2023-08-22

	2023_08_Aug
	2023-08-22_BOOT_VBOX.txt

	BOOT VBOX

		kernel
		mulibc - or even less
		link as static WASM
		+= ADJACENT WASM // VIA MMAP and RPC_STEP
		+= MMAP_FILE into shared FILE in VBOX in THREAD
		+= COPY_FILE - not MMAP but uses CLOCK edge COPY CTOR to DTOR
		CTOR_COPY - load BUFF from FILE
	
	QEMU VBOX
	QEMU SNAP
	QEMU QEMU 

		CONTAINER uses CPU_SHARED

		CONTAINER uses LIBR_LIST // NONE for WASM ?

		CONTAINER uses FILE_LIST // VFS // shared or not


	SINGLE process is OK, with Linux Kernel API and CONTAINER API

		running nodejs
		running vfs_nodejs // ie ROM + STO + BUFF + SQLITE
		running net_SQL

		can run npm to configure nodejs

		V8 does jit and WASM and its own JS_LIBR_ES14

			we remain within E6 to allow UDEF_JS_not_V8
			_not_even_WASM lowest_API_subset is (...)
			we are careless and easily require V8 or SpiderMonkey
			unused ES14 libraries are there just unused in VFS

		VFS + nodejs_LIBR ES6_CORE
		VFS + nodejs_LIBR ES14_PLUS
		VFS + nodejs_LIBR UDEF_CORE
		VFS + nodejs_LIBR UDEF_PLUS
		VFS + nodejs_LIBR UDEF_SITE
		VFS + nodejs_LIBR UDEF_BENCH
	
	IPTABLES for QEMU PROCESS_SHELL += TCPIP // IP4 _IP6 _IPTABLES //

		ENABLE SERVICE PORT

			HTTPD

		ENABLE SERVICE PORT

			from ANYWHERE to PORT_80 or PORT_443

			FILTER_SOURCE_ADDRESS

				log + block // UDEF CXX //

		PERMIT outgoing to

			DNS LIBR_provider

			DNS SERV provider

			any other DNS request triggers LOG_n_BLOCK

		PERMIT outgoing to

			WLAN DMZ 
			VTUN DMZ
			WLAN DMZ_repeated_ZONE

			SERV EMAIL via PAID SERVICE_RELAY

			CACHE_RELAY

			LOCAL_API

BOOT_VBOX - TINY OS installed - KERNEL RAM_DISK STO_DISKS 
BOOT_VBOX - TRAD OS installed - KERNEL RAM_DISK STO_DISKS
BOOT_VBOX - FULL OS installed - BOOT_ROOT LOADER KERNEL VFS CFG 

	kernel
	modules
	/lib
	/bin
	/etc
	// busy_box //
	// DEBIAN // 
	// NODEJS //
	// VFS += NPM_LOADED //
	// VFS += SQL_STORAGE // 


