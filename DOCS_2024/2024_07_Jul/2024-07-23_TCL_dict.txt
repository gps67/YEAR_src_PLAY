	2024-07-23

	2024_07_Jul
	2024-07-23_TCL_dict.txt

 dict append $dict $key ...VALUES...
 OPTIONAL list of pairs ... k1 v1 k2 v2 k3 v3 ...
 dict create   k1 v1   k2 v2   k3 v3   ...
 	RET_VAL = updated $dict
 dict exists $dict $key ;# $key_one $key_two $key_three # tree of dict
 dict filter $dict key ?globPattern ...?
 	see string match for patterns 

 dict filter $dict script {key val} script
 	# dict == $dict # also within SCOPE as AVAR("dict") # on clash vanish
 	# key == $key # CALL PARAMETER
 	# val == $val # CALL PARAMETER
	SCRIPT == LIST of LINES of WORDS as STR0 # P0P2 using CSET_ORIGINAL #
	CSET_ORIGINAL = CSET_of_STREAM # where P0P2 is original TEXT

 dict filter $dict value val_patterns
         see string match for patterns

 dict for {key val} $dict $SCRIPT
 	TCL_BREAK means break

 dict get $dict $key_one ;# $key_one $key_two $key_three # nested dict

 eg	dict get $dict foo bar spong
 as	dict get [dict get [dict get $dict foo] bar] spong

 dict get $dict
 	returns k_v_list
	like array get $ary
 	returns all items as alternating pairs k_v_list

 dict getdef $dict k1 k2 ... $default

 	get def is like get but with default instead of throw

 dict getwithdefault $dict k1 k2 ... $default

 dict incr $dict key ;# [ increment ] #
 dict info $dict ;# array statistics for dict
 dict keys $dict %s_* ;# string match


string match [-nocase] pattern string
pattern {
	*	like .*
	?	like .
	[A-z]	like regexpr
	\x	match glyph x \* \? \[ \] \\

}
