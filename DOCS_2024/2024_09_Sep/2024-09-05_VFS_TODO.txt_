	2024-09-05

	2024_09_Sep
	2024-09-05_VFS_TODO.txtP_

	Actual FS_TREE mounted as _ROOT_ == %s /mnt/sda3

	DEVICE = copy of FS_IMAGE
	LO_FILE = copy of FS_IMAGE
	MMAP_QEMU_FS - pick_your_VFS_actual_supply

	ext3_fs
	vfat_32
	NTFS_fs

	MOUNT POINT needs to track { du QUOTA df }

---------- VFS FILTERS

{
// WRAP += is_absent_NODE
// WRAP += is_absent_NODE_or_LEAF
// WRAP += is_absent_LEAF // CODE_POINT can tell us this // expected LEAF SOCKET
// LEAF += SOCKET // CODE to go fetch DATA for CACHE to hold // DATA = signals

// WRAP += is_absent_DIR
// WRAP += is_absent_DIR_or_FILE

// on_ABSENT { REQ "have_FILE_NAME_but_no_ENT" } // of any kind
// on_ABSENT { REQ "have_FILE_NAME_but_no_DIR" }
// on_ABSENT { REQ "have_FILE_NAME_but_no_FILE" }
// on_ABSENT { REQ "have_FILE_NAME_but_no_FILE_of_TYPE" }
// on_ABSENT { REQ "have_FILE_NAME_but_no_FILE_TYPE" } DIALECT for "TYPE"

// VFS_FILTER //
//
// VFS wants to use a real FS to do the work
// VFS_FILTER can bounce signals and calls and wrap AVAR s as VFS
// and use a real FS to do the work

// VFS_POSIX_ACTUAL
// VFS has it's own idea of where it was mounted, sometimes at ROOT /
// VFS may provide non-clashing names in dirs // ROM has full list LEXICON
// VFS is mounted at $HOME/VFS/VFS_FF//_POSIX_ACTUAL//_ROOT_//
// VFS is mounted at $HOME/VFS/VFS_FF//_VFS_item_is_struct_with_field_ROOT//
// _ROOT_ is a reserved word and A_DIR // other words 
// _ROOT_ is a reserved word and NO_STEP_DIR_STAY_DIR_DOT A_DIR // other words 
// _ROOT_ is a MACRO for DOT_SILENT
// _ROOT_ is a MACRO for UDEF // mount point for VFS_one

// _one is a SYNB LINK to _ROOT_
// MNT_ is a reserved word
// VFS is mounted at $HOME/VFS/VFS_FF/_ROOT_/ this_is_an_actual_file.txt
// VFS is mounted at $HOME/VFS/VFS_FF/_one -> _ROOT_
// VFS is mounted at $HOME/VFS/VFS_FF/_two_/ this_is_an_actual_file.txt
// VFS is mounted at $HOME/VFS/_POSIX_ACTUAL//VFS_FF_FF//
// 
}


