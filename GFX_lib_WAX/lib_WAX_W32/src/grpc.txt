grpc

	we make ONE CALL ENQ_ACK

	 it contains a batch bundle of queued ENQ_ACK // GET_ATTR

	 the sent list remains LOCAL
	 the sent list has been completely SENT 

	 the reply comes in several phases
	 the entire reply has been crypted with 256_BITS per phrase 32_bytes

	 	32 bytes = 256 bits = 4 CPU_WORDS 
	 	 8 bytes =  64 bits = 1 CPU_WORD // often i32_i32

		C and ASM can do i64 on i32_CPU // keeps in mem 
		ASM r1_half r2_high
		 ASM
		  r1_half 
		  r2_high
		 
		 When CT_RT does CTOR of CPU_WORD pre USED // ACCEPT RAND WORD
		 // personally I prefer always INIT_ZERO // by DTOR_ZERO

		 OOP_EDGE base_class CTOR and DTOR get told leaf_class nbytes

		 	INIT_ZERO nbytes
			DTOR_ZERO nbytes

			we have to trust our DTOR code
			a machine might prove that code DONE
			edit code until detected correct -- tests
	
 B2B0
 	 B2] ...  B0]
	  8] ...   0] BYTE_A
	 16] ...   0] PAIR_BA ALIAS AB BA
	 16] ...   0] PAIR_AB ALIAS AB BA
	 16] ...   8] BYTE_B
	 32] ...  16] i16_CD alias _DC
	 64] ...  32] i32_EFGH alias _HGFE alias _from_LOHI
	 64] ...   0] i64_ABCD_EFGH alias ...

	 64] ...   0] i64_CPU_WORD_0
	128] ...  64] i64_CPU_WORD_1
	192] ... 128] i64_CPU_WORD_2
	256] ... 192] i64_CPU_WORD_3

	i32_i32 {
	 i32 _i32_half_half
	 i32 _i32 high_half
	}

	i32_i32 {
	 i32_half_half_t
	 i32_half_half ;
	 i32 high_half_t
	 i32 high_half ;
	}
	on i32 DECL i32 high_half_t i32 lohi_t
	on i32 DECL i32 half_half_t i32 lohi_t // MEM_WORD CPU_WORD _i32

	 define _i32_half = _i32_half_half
	 define _i32 high = _i32 high_half

 CT_RT u8_u8	256 bits per data block # but unusigned
 CT_RT i8_i8    128 reachable as PLUS 128 as MINUS # eg extern import EA_EXPR i64

 	we usually see it as i64[4] -- 4 WORDS of i64_lohi
	we can pinpoint i16 within i64 and larger array of i64 // ALIGNED //

 	if PARAMETER is never used it has no cost

 CT_RT i16_i16
	

 gaslighting

 	being helpful, brainstorming possible ideas
	one line solution to problems,
	makes problem seem halucinated,
	as if you never had any substance to your issues,
	gaslit
