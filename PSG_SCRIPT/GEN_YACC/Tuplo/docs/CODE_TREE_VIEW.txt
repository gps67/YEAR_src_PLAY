#	CODE_TREE_VIEW.txt

 VIEW_CODE

 	nested indented text
	GEN details for specific OUTPUTS
	GEN details for VIEW[udef]

 TREE_CODE

 	MODULE
	FUNCTION
	LINE_in_BLOCK
	LINE_in_BLOCK # PARSED_CXX_EXPR
	LINE_in_BLOCK # PARSED_CXX_ARGV // OPCODE ARGS

	PARSED_CXX

		GEN needs tests to loop around
		TCL_API for tests
		SCRIPT_PARSER_ARGV_from_CXX
		SCRIPT_PARSER_CXX_from_ARGV
	
	COMPILED TABLES

		VARS_in_BLOCK

		XPOS_DECL_TWIG // or retro parse backwards from ZERO PTR IDENT

		KNOW_IDX_REMAPPED

			"{ alloc idx = N ++ }"

			ITEM == idx

		KNOW SEGMENT STREAMED out of COMPILER

			PREPARED BYTES
			LOAD_at_OFFS_over_BASE
			UNIT = 1 WORD of 4 BYTES
			UNIT = 2 WORD of 4 BYTES // EIGHT_BYTES

		CT_RT opens up COMPILER MAGIC

			resolved ALIAS
			resolved STRONG_TYPE_CHECK_REQUIRED
			resolved STRONG_TYPE_CHECK_AVAILABLE

			call prepared SCRIPT using ARGV of OBJECTS
			call prepared SCRIPT using JSON of OBJECTS
			call prepared SCRIPT using BOTH of ARGV JSON ...more...
	CODE_VIEW

	simplify available CXX prototypes
	 OPTIONS
		call A R G S
		call( A R G S )
		call( A, R, G, S )
		call( A, R, G, S, ...  )

	 browse MODULE

	 	TYPE_TREES within MODULE and OUTSIDE

		namespaces
		 base classes
		  DOCS_VIEW() { present PANEL that explains VAR and VAL EDITS }
		  DOCS_VIEW() { scroll file generated by GEN }

		  TEXT_SHOWN
		   clickable incl hovver Tk WAX_components

		  on_CLICK
		   editing actions
		   benching navigating actions

		 SAMPLE_ACTIVE_MODULES

		  BROWSE PANELS TEXT_in_PANELS
		  FOLDABLE PANELS
		  FOLDABLE ZONE PANELS

		  AVOID CACHE names or head straight for them
		  VAR_NAME_t VAR_NAME = CACHED_VARS("VAR_NAME")
		  VAR_NAME_t VAR_NAME = idx = CACHED_VARS("VAR_NAME").idx

		  BROWSE LISTS
		  BROWSE LISTS of ARGS in CXX_CALL
		  BROWSE LISTS of FIELDS in CXX_STRUCT
		  BROWSE CSR_in_SPEC_TREE of FIELDS in CXX_STRUCT
		  BROWSE SPEC += ANY OF LIST // _AVAILABLE _USED _OK_NULL

		 DATA_VIEW

		  DECODE xFFFF 
		  u8_u24_lohi

		 FIELD_GETTER_VIEW

		  FIELD is found in PTR_OBJ_EXPR _BASE + _OFFS
		  _BASE = EA_OBJ // PTR_OBJ
		  _OFFS = offs_of_FIELD_in_STRUCT( FIELDNAME STRUCT_SPEC_VAR )
		  _NAME == _VAR // += MENTION // 
		  







