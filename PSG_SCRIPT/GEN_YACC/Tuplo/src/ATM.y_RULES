//
// THIS IS ATM.y_RULES START
//

HEAD: StartFontMetrics WORDS { }
HEAD: Comment WORDS
HEAD: FontName NimbusMonoPS-Bold
HEAD: FullName WORDS
HEAD: FamilyName WORDS
HEAD: Weight Bold
HEAD: ItalicAngle VAL_FLOAT
HEAD: IsFixedPitch true
HEAD: UnderlinePosition VAL_INT
HEAD: UnderlineThickness VAL_INT
HEAD: Version WORD
HEAD: Notice WORDS
HEAD: EncodingScheme AdobeStandardEncoding
HEAD: FontBBox VAL_INT VAL_INT VAL_INT VAL_INT
HEAD: CapHeight VAL_INT
HEAD: XHeight VAL_INT
HEAD: Descender VAL_INT
HEAD: Ascender VAL_INT
HEAD: StartCharMetrics VAL_INT

WORDS : %empty | WORDS WORD { INFO("WORDS WORD %s", $2); $$ = $2; }


expr_ident : LEX_WS expr_ident { $$ = $2; }
expr_ident : expr_ident LEX_WS { $$ = $1; }
expr_ident : LEX_IDENTIFIER { $$ = EXPRS:: E0( (STR0) yylval.lex_buff ); }

expr : expr_ident { $$ = $1; }

expr : expr PUNCT_CARET expr { $$ = E_power_E( $1, $3 ); }
expr : expr PUNCT_STAR  expr { $$ = E_times_E( $1, $3 ); }
expr : expr PUNCT_PLUS  expr { $$ = E_plus_E( $1, $3 ); }
expr :      PUNCT_MINUS expr { $$ = E1( $1, $2 ); }   
expr :      PUNCT_L_PAR expr PUNCT_PAR_R{ $$ = E_paren( $2 ) ; }
// //	...: '-'  expr      %prec  '*'

lines
: %empty
| lines EXPR_line { EXPR * E = $2; $$ = E->EXPR_branch_result(); }

//
// save PSG_line as RETVAL // all wrong
// PASS back "TOKEN_line" or something
// USE a global PARAMETER save it
//

EXPR_line : WORDS { $$ = $1; INFO("WORDS"); }
// EXPR_line : expr LEX_EOLN { EXPR * E = $1; $$ = E->EXPR_branch_result(); }

top: lines

//
// THIS IS ATM.y_RULES END
//

