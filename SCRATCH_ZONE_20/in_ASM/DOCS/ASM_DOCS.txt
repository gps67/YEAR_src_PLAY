https://cs.lmu.edu/~ray/notes/gasexamples/

	CALL
		W32
		W64
		L32
		L64



	CALL
		rdi, rsi, rdx, rcx, r8, r9.
		xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7
	
		then on stack (caller removes those)

	RET
		rax
		rdx:rax

		xmm0
		xmm1:xmm0
	
	rsp must be aligned 16 before call

		so we started ALIGNED_16 + RET_ADDR_8 
		se we need odd number of pushes to be aligned 2 words 16
	
	preserve
		rbp, rbx, r12, r13, r14, r15
	
	expect corrupted

		ALL the others
	

	preserver ALSO

		XMCSR and the x87 control word

		xmm0 does not effect those

	saturated arithmetic

		int forced to remain within bounds

		 00 .. FF
		 80 .. 7F

		paddsb		xmm0 xmm1
		paddusb
	
	SIMD

addpd — do 2 double-precision additions
addps — do just one double-precision addition, using the low 64-bits of the register
addsd — do 4 single-precision additions
addss — do just one single-precision addition, using the low 32-bits of the register

