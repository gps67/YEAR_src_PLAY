#!/tools/CTXT/tcl/bin/tclsh

lappend auto_path [pwd]/fns_tcl

if 0 {
	# test say_do
	say_do pwd
	say_do ls
	say_do {bash -c "pwd;exit 7"}
	say_do false
	# say_do {vi /tmp/t}
}


proc OUT {str} {
	global CA_out
	puts $CA_out $str
	puts         $str
}

proc FMT {fmt args} {
#	puts "# fmt # $fmt"
#	puts "# args # $args"
	;# args is special spelling
	;# it receives tail args as a list
	global CA_out
	set argv [linsert $args 0 format $fmt]
# 	set argv [concat format $fmt $args]
#	this left the [] unprotected unquoted
#	puts "# argv # $argv"
	OUT [ eval $argv ]
}

proc section {name} {
	# [] not processed because of the {}
	OUT "" ;# adds \n
	FMT {[%s]} $name
}

proc name_eq_value { name value } {
	FMT "%-23s = %s" $name $value
}

proc pair_list { list } {
	foreach {name value} $list {
		name_eq_value $name $value 
	}
}

proc section_list { section list } {
	section $section
	pair_list $list
}

proc main_mk_CA_conf {} {
 	set CA_conf_filename CA.conf.next
	global CA_out
	;# beware 0644 needs leading 0 to be octal not decimal
	set CA_out [open $CA_conf_filename w+ 0644] ;# truncate if exists

	# openssl [ req | ca | ... ]
	# -config openssl.conf
	# -extensions [ easyrsa_ca | server | ... ]
	#
	# DATA LINES
	# x509_extensions = basic_exts  
	# crl_extensions  = crl_ext
	# policy          = policy_anything
	#
	# # I think req ca ... work when cmd == req
	# # I think [ UDEF ] applies when -extensions UDEF
	# # I think name = UDEF when ... ehen ... ???
	#
	# borrowing from openvpn-2.5.1/sample/sample-keys/openssl.cnf


	section_list  ca {
		default_ca	CA_default
	}

	#	dir		/root/ca/root-ca
	#	dir		/home/gps/ca/root-ca
	section_list  CA_default {
		dir		/home/gps/YEAR_offline/src/PLAY_GITS/YEAR_src_PLAY/SCRATCH_ZONE_20/in_Tcl/CA_PC_101/ca_root
		certs		$dir/certs
		crl_dir		$dir/crl
		database	$dir/index.txt
		new_certs_dir	$dir

		certificate	$dir/ca.crt
		serial		$dir/serial
		crl		$dir/crl.pem
		private_key	$dir/ca.key
		RANDFILE	$dir/.rand

		x509_extensions	basic_exts
		crl_extensions	crl_exts

		default_days	3650
		default_crl_days	30
		default_md	sha256
		preserve	no

		policy		policy_anything

	}
	section_list  policy_anything {
		countryName		optional
		stateOrProvinceName	optional
		localityName		optional
		organizationName	optional
		organizationalUnitName	optional
		commonName		supplied
		name			optional
		emailAddress		optional
	}
	section_list  req {
		default_bits		2048
		default_keyfile		privkey.pem
		default_md		sha256
		distinguished_name	cn_only
		x509_extensions		easyrsa_ca
	}
	section_list	cn_only {
		commonName		{Common Name (eg: your user, host, or server name)}
		commonName_max		64
		commonName_default	X
	}

	section_list	org {
		countryName			{Country Name (2 letter code)}
		countryName_default		GB
		countryName_min			2
		countryName_max			2

		stateOrProvinceName		{State or Province Name (full name)}
		stateOrProvinceName_default	NA

		localityName			{Locality Name (eg, city)}
		localityName_default		Reading

		0.organizationName		{Organization Name (eg, company)}
		0.organizationName_default	Cascade

		organizationalUnitName		{Organizational Unit Name (eg, section)}
		organizationalUnitName_default	VLAN_99

		commonName			{Common Name (eg: your user, host, or server name)}
		commonName_max			64
		commonName_default		{}

		emailAddress			{Email Address}
		emailAddress_default		USER@dododone.xyz
		emailAddress_max		64
	}

	section_list	basic_exts {
		basicConstraints	CA:FALSE
		subjectKeyIdentifier	hash
		authorityKeyIdentifier	keyid,issuer:always
	}

	section_list	easyrsa_ca {
		subjectKeyIdentifier	hash
		authorityKeyIdentifier	keyid:always,issuer:always
		basicConstraints 	CA:true
		keyUsage 		cRLSign,keyCertSign
	}

	section_list crl_ext {
		authorityKeyIdentifier	keyid:always,issuer:always
	}

	section_list server {

		basicConstraints       CA:FALSE
		nsCertType             server
		nsComment              "OpenSSL Generated Server Certificate"
		subjectKeyIdentifier   hash
		authorityKeyIdentifier keyid,issuer:always
		extendedKeyUsage       serverAuth
		keyUsage               digitalSignature, keyEncipherment
	}

} ;# proc main_mk_CA_conf  

main_mk_CA_conf 
