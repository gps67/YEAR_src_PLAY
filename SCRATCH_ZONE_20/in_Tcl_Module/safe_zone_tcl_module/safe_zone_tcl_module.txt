

	safe_zone_tcl_module/
	safe_zone_tcl_module.txt


	feature_api
	_padded_cell_api
	_chroot_ed // eg run postgres in own CHROOT // _VFS
	_trusted_account
	_limited_account

		nb the folk at tcl.tk have safe_mode_soft_room_api_s
		which work identically within QUOTA per SESSION
		VFS looks like VFS ... maybe ?

	C++ API


	BINARY proveds SESS_api

		LOGIN user // PROOF WAS ... BINARY ... Module ... SCRIPT ...

		PERMIT += eval SCRIPT as user // OPTION SESS CTXT
		PERMIT += eval BINARY as user // RPC as it self // via RPC_CACHE
		PERMIT += load Module as user // IMPORT FILTER = SAFE_LIST
		FILTER += SAFE EVAL ANY SCRIPT within sandpit machine session
		FILTER += SAFE EVAL VOCAB AVAIL += DIALECT API SCRIPT
		SCRIPT += SAFE EVAL GEN_BINARY RUN API SESS //
		SCRIPT_RUNTIME DATA // elf_segment api_header api_runtime
		SCRIPT += WRAP EVERYTHING WITH_UNDER TCL_SAFE_MODE
		SCRIPT += TCL_SAFE_MODE
	

