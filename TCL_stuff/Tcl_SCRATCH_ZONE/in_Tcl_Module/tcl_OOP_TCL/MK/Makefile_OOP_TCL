#!/usr/bin/make -f

# where is tclsh rooted and where are its include files

	Tcl_prefix=/tools/x86_64/tcl

	CXX = g++
	OPTIM += -g
#	OPTIM += -O2
	fPIC = -fPIC
#	OPTIM += $(fPIC)
	LIST_CPLUS_INCLUDE_PATH += ./
	LIST_CPLUS_INCLUDE_PATH += ../
	LIST_CPLUS_INCLUDE_PATH += ../src/
	LIST_CPLUS_INCLUDE_PATH += ../STO/
#	LIST_CPLUS_INCLUDE_PATH += -I../buffer # get from libs_apps
#	LIST_CPLUS_INCLUDE_PATH += -I/tools/2000/X11R6/include

	# TODO check that these are tcl 9.0 
	INCLS += -I$(Tcl_prefix)/include
	INCLS += -I$(Tcl_prefix)/include/tcl

	DEFS = 

	PKGS += libs_apps_base1
	PKGS += libs_apps_base2
	PKGS += libs_apps_uses_ssl
#       PKGS += libs_apps_mozjs


	# we are in $(S)/obj/
	S=..
	VPATH +=$S
	VPATH +=$S/src
	VPATH +=$S/src/utils
	VPATH +=$S/src/type_plus

	LIST_CPLUS_INCLUDE_PATH += $(VPATH)

#	include ../MK/Makefile_libs_apps
	include ../MK/MK_with_libs_apps


	# I want to use FAIL WARN PASS INFO from dgb.h
	# I need to detatch that from libs_apps
	# particularly for a Tcl module
	# but that is over the horizon

	# will need to fully merge libs_apps
	# eg for open_ssl wrap,
	# eventually merge event loop io fd_
	# but for now I want INFO WARN and FAIL


	Module=tcl_oop_tcl
	Module_objs += TCL_ObjType_plain.o
	Module_objs += TCL_ObjType_PLUS.o
	Module_objs += TCL_PLUS_BASE.o
	Module_objs += TCL_PLUS_LEX.o
	Module_objs += TCL_PLUS_TCL2.o
	Module_objs += $(Module).o 
	Module_objs += OBJ_module.o
	Module_objs += TCL_PTR.o
	Module_objs += TCL_REF.o
	Module_objs += TCL_LIST.o
	Module_objs += TCL_HELP.o
	Module_objs += TCL_HASH.o
	Module_objs += TCL_DICT.o
	Module_objs += TCL_MATCHER.o
	Module_objs += TCL_MATCH.o
#	Module_objs += TCL_TYPE.o

	#imported LITE
	# Module_objs += dgb.o

# // edit any .h // recompile everything

	Module_hdrs += $(Module).h
	Module_hdrs += OBJ_module.h
	Module_hdrs += TCL_PTR.h
	Module_hdrs += TCL_REF.h
	Module_hdrs += TCL_LIST.h
	Module_hdrs += TCL_HELP.h
	Module_hdrs += TCL_HASH.h
	Module_hdrs += TCL_DICT.h
	Module_hdrs += TCL_MATCHER.h
#	Module_hdrs += TCL_TYPE.h
	Module_hdrs += TCL_ObjType_PLUS.h
	Module_hdrs += TCL_PLUS_BASE.h
	Module_hdrs += TCL_PLUS_LEX.h

	VPATH_LIST += ./src
	VPATH_LIST += ./src_PLUS
#	VPATH_LIST += ../src
	VPATH+=$S$(foreach sub,$(VPATH_LIST),:$(sub))
#	VPATH+=$S$(foreach sub,$(VPATH_LIST),:$S/$(sub))


.SUFFIXES: .o .cxx .so .exec .h

Default: test

default: module

module: $(Module).so

dgb: $(Module).so
	tclsh ../tests/test_$(Module).tcl 2>&1 

test: $(Module).so
	nm $(Module).so | grep Init
	tclsh ../tests/test_$(Module).tcl 2>&1 | tee fa 
	@echo '---'

# all of the .o depend on all of the .h
# but this did not work somehow
$(Module_objs): $(Module_hdrs)

$(Module).so:  $(Module_objs)
	# 
	# LINKS .so #
	# $@
	# 
	g++ -g -shared -o $@ $(Module_objs) $(LINKS)

.cxx.o:
	g++ $(OPTIM) $(fPIC) -c $< $(INCLS)

clean:
	rm -f $(Module).so $(Module_objs) fa fb
