. ../go__fns

# mount CVS disk
# fetch the CVS_gcc version
# edit the 2 dates in this file
# run, test,
# /tools/2000/ccs4 -> /tools/2000/ccs4-19991231/
# edit old date ...

# whilst gcc is volatile,
# do NOT install into /tools/2004/ccs/ - with make etc
# put into its own ccs4 dir 
# or even ccs4-YEARMMDD
# manually setup src/ccs4-1231/gcc-cvs -> ...

# use the OLD gcc to build the new one
# yearmmdd is the gcc used to build this new version
# that allows you to rebuild with the latest, or a known good copy
# if it doesnt exist, /usr/bin/gcc will be used (PATH)

	yearmmdd=20060621
	yearmmdd=20070301
	yearmmdd=20071002
	yearmmdd=20080407

#	PATH=$tools_2000/ccs4-$yearmmdd/bin:$PATH
	PATH=$tools_2000/ccs9/bin:$PATH

# the new version ($tools_2000/ccs4-YEARMMDD/)
# YEARMMDD is the date when cvs was run
#
# you should ensure that it is available as (symb-link)
# ${tools_2000}_src/ccs4-YEARMMDD

	YEARMMDD=`date +%m%d`
	YEARMMDD=0703
	YEARMMDD=1011
	YEARMMDD=`date +%Y%m%d`

#	date +YEARMMDD=%Y%m%d
	YEARMMDD=20060621
	YEARMMDD=20070301
	YEARMMDD=20070522 # no trace of this!
	YEARMMDD=20071002
	YEARMMDD=20080408

# as a freebie - link GCC_CVS to ccs4_YEAR_MMDD

	SRC_LINK=ccs4-yearmmdd	# CVS/CVS_gcc
	SRC_LINK=CVS/CVS_gcc
	SRC_LINK=/media/hda10/disk_copy/CVS/CVS_gcc/

	SRC_TOP=${tools_2000}_src/ccs4-$YEARMMDD

#	[ -L $SRC_TOP ] || ln -s $SRC_LINK $SRC_TOP

	# that still doesnt check that CVS is mounted

# set tools dirs ...


	# gcc-9.3.0.tar.xz  
	fn_grp_pkg ccs9 gcc-9.3.0
#	fn_grp_pkg ccs4-$YEARMMDD gcc
	mkdir ${tools_2000}_obj/ccs9 || echo IGNORED
#	mkdir ${tools_2000}_obj/ccs4-$YEARMMDD || echo OK

	fn_unpack
#exit

# want ccs to go first in PATH - use pfx not add 
# ccs is binutils, make, ... and other ccs other than ccs4 compiler

	fn_with_grp ccs	

# problems with fixinclues picking up the /usr/include/... before /tools

	fn_with_grp_all

# put the preferred (old) compiler at the front

#	var_pfx PATH $tools_2000/ccs4-$yearmmdd/bin
	var_pfx PATH $tools_2000/ccs9/bin

# HPUX wont do gij/alien fun call asm needed

	fn_configure_pfx \
	--enable-shared \
	--enable-threads=posix \
	--enable-languages=c,c++ \
	--disable-multilib \
#	--enable-languages=java \
#
	# --enable-interpreter \
	# --enable-languages=c++,java \
	# --enable-languages=c \
#

# so which compiler built this one ?
# fn_log expects obj dir to exist

	fn_log type gcc
	fn_log type as
	fn_log gcc --version
	fn_log as --version

# fn_make bootstrap || exit
(
	fn_make || exit # needed to build libstd++ ?? # uses obj/xcc
)

	fn_make -i install 

echo
echo "ccache -C # clears all # run it or regret it"
echo

#fn_make install || exit

	echo "#  ln -fs ccs4-$yearmmdd/ /tools/2000/ccs4"

	beep_me $0 "$@"

