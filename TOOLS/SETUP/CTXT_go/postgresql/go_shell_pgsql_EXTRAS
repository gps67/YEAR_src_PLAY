
. ../go__fns

# https://ftp.postgresql.org/pub/source/v17.0/postgresql-17.0-docs.tar.gz
# https://ftp.postgresql.org/pub/source/${v16_0}/postgresql-${_16_0}-docs.tar.bz2

_16_0=16.0
_16_0=17beta3
_16_0=17.0
_16_0=17.2
v16_0=v${_16_0}

# DOCS are only avail in .gz nor bz2
DOCS_TGZ=https://ftp.postgresql.org/pub/source/${v16_0}/postgresql-${_16_0}-docs.tar.gz
SOURCE_TGZ=https://ftp.postgresql.org/pub/source/${v16_0}/postgresql-${_16_0}.tar.bz2

	grp=postgresql 
	URL="$SOURCE_TGZ"

if false
then
fn_grp_url $grp "$SOURCE_TGZ"
# fn_no_VPATH
fn_unpack
fi

PDF1=https://www.postgresql.org/files/documentation/pdf/17/postgresql-17-A4.pdf
fn_grp_url $grp $PDF1
fn_unpack

# exit

fn_grp_url $grp "$DOCS_TGZ"
# fn_no_VPATH
fn_unpack

# postgres is different because we ALSO fetch the docs # ABOVE #
# now the usual source

fn_grp_url $grp "$SOURCE_TGZ"
# fn_no_VPATH
fn_unpack
# we call that to set the parameters of SOURCE not DOCS
# it was already unpacked

	exit

# USELESS HERE # ?
# fn_with_tk
# fn_with_grp tcl
fn_with_grp libr
fn_with_grp util
# fn_with_grp_all
# fn_with_grp_LD_RUN_PATH tcl
# fn_with_grp_LD_RUN_PATH libr
# fn_with_grp_LD_RUN_PATH util
# fn_with_X11

## SOMEHOW the top bin/python has to be linked with g++
# so that C++ modules get static init ?
enable_optimisations=""
# enable_optimisations=--enable-optimizations

fn_reconfigure
fn_configure_prefix \
#
# --with-cxx-main=g++ \
# ${enable_optimisations} \

#
fn_make
fn_make install
# fn_make -i install
