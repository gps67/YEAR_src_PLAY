#!/bin/bash
#
# now CET_fetch
# was PIOMAS_fetch

URL=https://www.metoffice.gov.uk/hadobs/hadcet/cetdl1772on.dat # CET
URL=https://www.metoffice.gov.uk/hadobs/hadcet/cetml1659on.dat # CET2

URL=https://www.metoffice.gov.uk/hadobs/hadcet/data/meantemp_daily_totals.txt
URL=https://www.metoffice.gov.uk/hadobs/hadcet/data/mintemp_daily_totals.txt
URL=https://www.metoffice.gov.uk/hadobs/hadcet/data/maxtemp_daily_totals.txt


BASENAME=`basename $URL`


# VARIABLE DATED_file_mtime
#
# you can use the ACTUAL file
# you can use your own dated file
# it is touched for last sucessful download
# web fetch if modified since ...

DATED_file_mtime=$BASENAME
# DATED_file_mtime=CET2_dated


date_r()
{
	echo >&2 "# date -r $* # `date -r $@` " # mtime
	# atime # unknown -flag || flag( "atimea, "{ ref_time = file.atime.get() }" 
	# date -r "$@"
}


# date_r $DATED_file_mtime
 LOG=$0.log
 # date | tee $LOG 
 touch $LOG # wake up nfs disk

# the exit code from curl is useless for Not Modified
# both return OK 0
# missing file does return non zero
# so resort to grep
#
# nb every year the previous year remains un-modified
# you would error after 5 weeks
#
# maybe libcurl or tcl-php-script node?

if type curl
then
	:
else
	exit 1
fi

echo "# URL # $URL"
date_r $DATED_file_mtime 
echo
if curl \
	--remote-name \
	--remote-time \
	--time-cond $DATED_file_mtime \
	-v \
	--fail \
	--fail-early \
	"$URL" \
 2>&1 | tee $LOG | grep Not.Modified
then
	:
	date_r $DATED_file_mtime
	exit 1
else
	touch -r $BASENAME $DATED_file_mtime
	ls -l $BASENAME $DATED_file_mtime
	cat $LOG
	echo Maybe Downloaded
	date_r $DATED_file_mtime
	exit 0
fi

# unreached
exit
