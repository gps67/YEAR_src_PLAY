# Make_Targets
# the names of programs, their test files, etc

	# HMMM # sar_parse and sar_plot are directories
	# they CANNOT also be programs, as .tar_excl_list names them!

	PROG1=accts
	PROG1b=accts_nwa
	PROG2=sar_plot
	PROG3=gtk_text
	PROG4=sar_parse
	PROG5=tv_rem
	PROG6=js_many
	PROG7=wclient
	PROG8=play_code
	PROG9=tv_vol
	PROG0=bench

##	LIB11=base
##	LIB22=base2
##	LIB35=accts_gtk
##	LIB36=sar_plot_post
##	LIB33=gtk_text
##	LIB34=s_apps_media

	PROG1_EXE = $(PROG1)$(dotEXE)
	PROG2_EXE = $(PROG2)$(dotEXE)
	PROG3_EXE = $(PROG3)$(dotEXE)
	PROG4_EXE = $(PROG4)$(dotEXE)
	PROG5_EXE = $(PROG5)$(dotEXE)
	PROG6_EXE = $(PROG6)$(dotEXE)
	PROG7_EXE = $(PROG7)$(dotEXE)
	PROG8_EXE = $(PROG8)$(dotEXE)
	PROG9_EXE = $(PROG9)$(dotEXE)
	PROG0_EXE = $(PROG0)$(dotEXE)

	TEST_FILE_PDB1 = /tmp/dpb_sar_test.odb

	TEST_FILE1e = $(TOP)/PRIV_samples/0102.csv
#	TEST_FILE1_dash = $(TOP)/PRIV_samples/0203.csv
	TEST_FILE1d = $(TOP)/PRIV_samples/0304.csv
	# TEST_FILE1 = $(TOP)/PRIV_samples/0405.csv
	# TEST_FILE1e = $(TOP)/PRIV_samples/0506.csv
	# TEST_FILE1f = $(TOP)/PRIV_samples/0708.csv
	# TEST_FILE1 = $(TOP)/PRIV_samples/0910.csv
	# TEST_FILE1 = /nfs/dws330/home/dws/BH6/2025-06-13_CSV/2025_2026_BH6_edit.csv
	TEST_DIR1 = /nfs/dws330/home/dws/BH6/DWS_2025_copied/2025_CSV/YEAR_MM_DD_CSV
	TEST_FILE1_dash = $(TEST_DIR1)/2025_2026_BH6_dash.csv
	TEST_FILE1_norm = $(TEST_DIR1)/2025_2026_BH6_norm.csv

	TEST_FILE1 = $(TEST_FILE1_dash)
	# TEST_FILE1_norm = /tmp/accts_test1.csv

	#TEST_FILE1_norm = /tmp/2025_2026_BH6_edit_norm.csv

	# TEST_FILE1 = $(TOP)/samples/rpt1.csv
	TEST_FILE1c = $(TOP)/PRIV_samples2/1112.csv

	TEST_FILE2 = $(TEST_FILE_PDB1)
	TEST_FILE3 = /tmp/fa
	TEST_FILE4a = $(TOP)/samples/eg_sar_data/sar_test_data.gz_2
	TEST_FILE4b = $(TOP)/samples/eg_sar_data/sar_vmstat.gz
	# 5 
	TEST_FILE6 = $(TOP)/samples/eg_csv_accts6/accts6.js
	TEST_FILE6b = $(TOP)/samples/eg_js_stats/stats_sysinfo.js
	TEST_FILE6_CH = $(TOP)/samples/eg_csv_accts6/accts6_CH.js
	TEST_FILE7 = ntping # $(TOP)/samples_/cli7.js
	# play_code a r g s
#	TEST_FILE8 = amix default Master 50
#	TEST_FILE8 = SPOUT test2
#	TEST_FILE8 = cfg_demo
#	TEST_FILE8 = base64_demo
#	TEST_FILE8 = 
#	TEST_FILE8 = VNC_PASS_DECODE /tmp/passwd_73
	TEST_FILE8 = VNC_PASS_ENCODE /tmp/passwd_73 abcd5678
	## TEST_FILE8 = cfg_demo test4
	## TEST_FILE8 = HT_main


# GEN produces this file
# OPTS "{  --command ${GDB_INIT_FILE_%s) }" // %s PURPOSE // FILENAME %s //
# OPTS "{  --command $(TOP)/_run/.gdbinit_$(PROG1}b) }" 
# OPTS "{  --command $(TOP)/_run/.gdbinit_$(PROG1b) }" 



gdb1: $(PROG1_EXE)
	$(GDB) --command $(TOP)/_run/.gdbinit_$(PROG1) $(PROG1_EXE)

gdb1a: $(PROG1_EXE)
	$(GDB) \
	--command \
		$(TOP)/_run/.gdbinit_$(PROG1) \
	--args \
		$(PROG1_EXE)  --run-reports $(TEST_FILE1_dash)

gdb1b: $(PROG1_EXE)
	# touch $(TOP)/_run/.gdbinit_$(PROG1) 
	$(GDB) \
	--command \
		$(TOP)/_run/.gdbinit_$(PROG1b) \
	--args \
		$(PROG1_EXE)  --run-reports $(TEST_FILE1_dash)
	# gdb needs --args ARGS # above l ine is the ARGV
	# --run_reports is to become --normalise SRC DST # SRC.2
	# $(GDB) --command $(TOP)/_run/.gdbinit_$(PROG1b) --args \
	# $(PROG1_EXE) --load-saveAs-quit $(TEST_FILE1_dash) $(TEST_FILE1_norm)
	# T GDB starts an xterm running GDB
	# T returns OK # so proceed with next MAKE line #
	# GDB seems to be OK with this, it has its own xterm TTY
	# tcl_less # continues until EXIT is pressed # feeds from STDERR #
	# so no more make lines - dont write them - it confuses everyone
	# ie after the T GDB 


	# NOT $(PROG1_EXE) --load-saveAs-quit $(TEST_FILE1_dash) $(TEST_FILE1_norm)
	# ls -ldi $(PROG1_EXE) $(TEST_FILE1_dash) $(TEST_FILE1_norm)

gdb2: $(PROG2_EXE)
	$(GDB) --command $(TOP)/_run/.gdbinit_$(PROG2) $(PROG2_EXE)

gdb3: $(PROG3_EXE)
	$(GDB) --command $(TOP)/_run/.gdbinit_$(PROG3) $(PROG3_EXE)

gdb4: $(PROG4_EXE)
	$(GDB) --command $(TOP)/_run/.gdbinit_$(PROG4) $(PROG4_EXE)

gdb5: $(PROG5_EXE)
	$(GDB) --command $(TOP)/_run/.gdbinit_$(PROG5) $(PROG5_EXE)

gdb6: $(PROG6_EXE)
	$(GDB) --command $(TOP)/_run/.gdbinit_$(PROG6) $(PROG6_EXE)

gdb7: $(PROG7_EXE)
	$(GDB) --command $(TOP)/_run/.gdbinit_$(PROG7) $(PROG7_EXE)

gdb8: $(PROG8_EXE)
	#
	# This --args worked fine
	# and can make the ./_run/.gdbinit_$(PROG8) more generic
	#
	$(GDB) --command $(TOP)/_run/.gdbinit_$(PROG8) --args $(PROG8_EXE) $(TEST_FILE8)

gdb0: $(PROG0_EXE)
	$(GDB) --command $(TOP)/_run/.gdbinit_$(PROG0) $(PROG0_EXE)

gdb9: $(PROG9_EXE)
	$(GDB) --command $(TOP)/_run/.gdbinit_$(PROG9) $(PROG9_EXE)

test1a: $(PROG1_EXE)
	$(PROG1_EXE)  --run-reports $(TEST_FILE1_dash)

junk_was_test1a:
	$(PROG1_EXE)  --load-save-quit $(TEST_FILE1)
	$(PROG1_EXE)  --run-reports $(TEST_FILE1)
	$(PROG1_EXE)  --pdf-vat-track $(TEST_FILE1)
	@# $(PROG1_EXE) $(TEST_FILE1)

#	-cd $(TOP)/mm3_scan ; make

test1b: $(PROG1_EXE)
	$(PROG1_EXE)  --load-saveAs-quit $(TEST_FILE1_dash) $(TEST_FILE1_norm)
	$(PROG1_EXE)  --pdf-vat-track $(TEST_FILE1_dash)
	false
	@# $(PROG1_EXE)  --run-reports $(TEST_FILE1_dash)
	$(PROG1_EXE)  --pdf-vat-track $(TEST_FILE1_dash)
	@# $(PROG1_EXE) $(TEST_FILE1_dash)

test1c: $(PROG1_EXE)
	# CH reports debugging target
##	$(PROG1_EXE)  --load-save-quit $(TEST_FILE1c)
##	$(PROG1_EXE)  --run-reports $(TEST_FILE1c)
##	$(PROG1_EXE)  --run-reports-CH $(TEST_FILE1c)
#	$(PROG1_EXE)  CH1_YEAR2_ZERO 2011
#	$(PROG1_EXE)  CH1_2010_2011
	$(PROG1_EXE)  CH1_2011_2012
#	$(PROG1_EXE)  CH1_2012_2013
##	$(PROG1_EXE)  --pdf-vat-track $(TEST_FILE1c)
##	@# $(PROG1_EXE) $(TEST_FILE1c)

test1: $(PROG1_EXE)
	@# $(PROG1_EXE)  --load-save-quit $(TEST_FILE1)
	@# $(PROG1_EXE)  --run-reports $(TEST_FILE1)
	$(PROG1_EXE) $(TEST_FILE1)
	@#
	@# $(PROG1_EXE)  --load-save-quit $(TEST_FILE1_dash)
	@# $(PROG1_EXE) --run-reports $(TEST_FILE1_dash)
	@# $(PROG1_EXE) $(TEST_FILE1_dash)

test2: $(PROG2_EXE)
	$(PROG2_EXE) $(TEST_FILE2)

test3: $(PROG3_EXE)
	$(PROG3_EXE) $(TEST_FILE3)

test4: $(PROG4_EXE)
	$(PROG4_EXE) --sitename SiteTest  --filetype sar_hp11    $(TEST_FILE4a)
	$(PROG4_EXE) --sitename SiteTest --filetype vmstat_hp10 $(TEST_FILE4b)
	@# $(PROG4_EXE) --sitename SiteSar  --filetype sar_hp11    $(TEST_FILE4a)
	@# $(PROG4_EXE) --sitename SiteName --filetype vmstat_hp10 $(TEST_FILE4b)

test6b: $(PROG6_EXE)
	$(PROG6_EXE) $(TEST_FILE6b)
	@# $(PROG6_EXE) --sitename SiteTest  --gather sysinfo $(TEST_FILE6b)

test5: $(PROG5_EXE)
	./$(PROG5_EXE)

test6: $(PROG6_EXE)
	$(PROG6_EXE) $(TEST_FILE6)

test6_CH: $(PROG6_EXE)
	$(PROG6_EXE) $(TEST_FILE6_CH)

test7: $(PROG7_EXE)
	$(PROG7_EXE) $(TEST_FILE7)

test8: $(PROG8_EXE)
	$(PROG8_EXE) $(TEST_FILE8)

test9: $(PROG9_EXE)
	$(PROG9_EXE) $(TEST_FILE9)

test0: $(PROG0_EXE)
	$(PROG0_EXE) $(TEST_FILE0)


