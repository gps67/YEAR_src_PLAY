#
# MK_SUFFIXES - generic support for gmake suffix rules
#

#
# you must list all filename extensions used
#
.SUFFIXES: .cxx .c .o .so .elf .exec

#
# RULE: compile from .c to .o
# RULE: compile from .cxx to .o
# 
.c.o:
	gcc $(OPTIM) $(INCLS) $(DEFS) -c $<

.cxx.o:
	$(CXX) $(OPTIM) $(INCLS) $(DEFS) -c $<

#
# DEBUG: show some vars used by compiler
# $$X goes to $X sh -c 'expands $X'
# 
# #	sh -c 'echo $$CPLUS_INCLUDE_PATH ; echo '$$HOME''

#
# RULE: link .o into .exec adding all prerequisites on make list and $LIBS
# that means that you must build .exec from .o's only (and .a maybe .so)
# if that doesnt work, you wont be using the .exec rule (convenience mostly)
#

# .elf and .exec are the same
# do not use .exe # leave that for WIN32

# TODO # FIX # it isnt listing OBJS as dependencies

# info make # 10.7 Old-Fashioned Suffix Rules
# .o.elf .o.exec: $(OBJS) # NO rerequisites

# but this isnt working either
# %.exec: %.o $(OBJS)


# .o.elf .o.exec: $(OBJS)

%.elf: %.o $(OBJS)
	# .elf is like .exec but duplicated text
	$(CXX) $(OPTIM) -o $@ $< $(OBJS) $(LINKS) $(LIBS) 

%.exec: %.o $(OBJS)
	#
	# MK_SUFFIXES link program RULE
	#    RULE: .o.elf .o.exec %(OBJS)
	#
	#     CXX: $(CXX) 
	#   OPTIM: $(OPTIM)
	#  CFLAGS: $(CFLAGS) # errm not ENV(CFLAGS) # used by CC etc
	# LDFLAGS: $(LDFLAGS)
	#  YFLAGS: $(YFLAGS)
	#    PKGS: $(PKGS)
	#
	#    OBJS:
	#	$(OBJS)
	#
	#    OPTIONS for LINKS
	#	-rdynamic # helps backtrace get symbols
	#   LINKS:
	#	$(LINKS)
	#
	#    LIBS:
	#	$(LIBS)
	#
	#
	#   @  $@
	#   <  $<
	#   ^  $^
	#
	#
	$(CXX) $(OPTIM) -o $@ $< $(OBJS) $(LINKS) $(LIBS) 
	#
	# NOT # strip $@
	# list libraries used # particularly non system
	ldd $@ | grep $(HOME)
	# BUILT # $@ #

# 
#
# should use
# CFLAGS LDFLAGS YFLAGS

# cant have targets here - first is default
# zap:
#	# rm -rf $(EXELIST) *.o

##########################

#
# NOTES:
#
#  info make --index-search="Automatic Variables"

# automatic variables: automatic
# @ - the target
# ^ - all prerequisites, incl dirnames
# ? - OLD prerequisites, incl dirnames
# + - all like $^ with duplicates

